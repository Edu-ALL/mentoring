{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/vue-multiselect/dist/vue-multiselect.esm.js"],"names":["$","uncurryThis","IndexedObject","toIndexedObject","arrayMethodIsStrict","un$Join","join","ES3_STRINGS","Object","STRICT_METHOD","target","proto","forced","separator","this","undefined","fails","module","exports","METHOD_NAME","argument","method","call","isEmpty","opt","Array","isArray","length","not","fun","params","includes","str","query","text","toString","toLowerCase","indexOf","trim","filterOptions","options","search","label","customLabel","filter","option","sort","a","b","stripGroups","$isLabel","flattenOptions","values","reduce","prev","curr","push","$groupLabel","concat","filterGroups","groupLabel","groups","map","group","console","warn","groupOptions","flow","fns","x","v","f","multiselectMixin","isOpen","preferredOpenDirection","optimizedHeight","maxHeight","props","internalSearch","type","Boolean","default","required","multiple","trackBy","String","searchable","clearOnSelect","hideSelected","placeholder","allowEmpty","resetAfter","closeOnSelect","Function","taggable","tagPlaceholder","tagPosition","max","Number","id","optionsLimit","groupValues","groupSelect","blockKeys","preserveSearch","preselectFirst","internalValue","select","filteredOptions","computed","modelValue","normalizedSearch","filterAndFlat","isSelected","isExistingOption","isTag","unshift","slice","element","flatAndStrip","getOptionLabel","watch","$emit","emits","methods","optionKeys","valueKeys","$isDisabled","key","selectGroup","disabled","pointerDirty","deactivate","removeElement","selectedGroup","find","wholeGroupSelected","newValue","optionsToAdd","isOptionDisabled","every","shouldClose","index","adjustPosition","pointer","$nextTick","$refs","focus","$el","blur","getValue","activate","window","spaceAbove","getBoundingClientRect","top","spaceBelow","innerHeight","bottom","hasEnoughSpaceBelow","openDirection","Math","min","pointerMixin","showPointer","optionHeight","pointerAdjust","setAttribute","wholeGroupDisabled","pointerReset","list","scrollTop","pointerPosition","visibleElements","pointerForward","pointerBackward","script","name","mixins","selectLabel","selectGroupLabel","selectedLabel","deselectLabel","deselectGroupLabel","showLabels","limit","limitText","count","loading","showNoOptions","showNoResults","tabindex","singleValue","visibleValues","width","position","padding","display","hasSingleSelectedSlot","visibleSingleValue","_hoisted_1","ref","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","isAbove","onFocus","$event","onBlur","onKeydown","onKeypress","addPointerElement","onKeyup","role","$slots","toggle","onMousedown","remove","textContent","_","autocomplete","spellcheck","style","inputStyle","value","onInput","updateSearch","removeLastElement","args","currentOptionLabel","contentStyle","optionHighlight","onClick","onMouseenter","pointerSet","selectLabelText","selectedLabelText","deselectLabelText","selectGroupLabelText","deselectGroupLabelText","groupHighlight"],"mappings":"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","file":"js/chunk-f637c13a.9db72e8f.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","import { openBlock, createBlock, withKeys, withModifiers, renderSlot, createVNode, withDirectives, Fragment, renderList, toDisplayString, vShow, createCommentVNode, Transition, withCtx, createTextVNode } from 'vue';\n\nfunction isEmpty (opt) {\n  if (opt === 0) return false\n  if (Array.isArray(opt) && opt.length === 0) return true\n  return !opt\n}\n\nfunction not (fun) {\n  return (...params) => !fun(...params)\n}\n\nfunction includes (str, query) {\n  /* istanbul ignore else */\n  if (str === undefined) str = 'undefined';\n  if (str === null) str = 'null';\n  if (str === false) str = 'false';\n  const text = str.toString().toLowerCase();\n  return text.indexOf(query.trim()) !== -1\n}\n\nfunction filterOptions (options, search, label, customLabel) {\n  return search ? options\n    .filter((option) => includes(customLabel(option, label), search))\n    .sort((a, b) => customLabel(a, label).length - customLabel(b, label).length) : options\n}\n\nfunction stripGroups (options) {\n  return options.filter((option) => !option.$isLabel)\n}\n\nfunction flattenOptions (values, label) {\n  return (options) =>\n    options.reduce((prev, curr) => {\n      /* istanbul ignore else */\n      if (curr[values] && curr[values].length) {\n        prev.push({\n          $groupLabel: curr[label],\n          $isLabel: true\n        });\n        return prev.concat(curr[values])\n      }\n      return prev\n    }, [])\n}\n\nfunction filterGroups (search, label, values, groupLabel, customLabel) {\n  return (groups) =>\n    groups.map((group) => {\n      /* istanbul ignore else */\n      if (!group[values]) {\n        console.warn(`Options passed to vue-multiselect do not contain groups, despite the config.`);\n        return []\n      }\n      const groupOptions = filterOptions(group[values], search, label, customLabel);\n\n      return groupOptions.length\n        ? {\n          [groupLabel]: group[groupLabel],\n          [values]: groupOptions\n        }\n        : []\n    })\n}\n\nconst flow = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\n\nvar multiselectMixin = {\n  data () {\n    return {\n      search: '',\n      isOpen: false,\n      preferredOpenDirection: 'below',\n      optimizedHeight: this.maxHeight\n    }\n  },\n  props: {\n    /**\n     * Decide whether to filter the results based on search query.\n     * Useful for async filtering, where we search through more complex data.\n     * @type {Boolean}\n     */\n    internalSearch: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Array of available options: Objects, Strings or Integers.\n     * If array of objects, visible label will default to option.label.\n     * If `labal` prop is passed, label will equal option['label']\n     * @type {Array}\n     */\n    options: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Equivalent to the `multiple` attribute on a `<select>` input.\n     * @default false\n     * @type {Boolean}\n     */\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Key to compare objects\n     * @default 'id'\n     * @type {String}\n     */\n    trackBy: {\n      type: String\n    },\n    /**\n     * Label to look for in option Object\n     * @default 'label'\n     * @type {String}\n     */\n    label: {\n      type: String\n    },\n    /**\n     * Enable/disable search in options\n     * @default true\n     * @type {Boolean}\n     */\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Clear the search input after `)\n     * @default true\n     * @type {Boolean}\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Hide already selected options\n     * @default false\n     * @type {Boolean}\n     */\n    hideSelected: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Equivalent to the `placeholder` attribute on a `<select>` input.\n     * @default 'Select option'\n     * @type {String}\n     */\n    placeholder: {\n      type: String,\n      default: 'Select option'\n    },\n    /**\n     * Allow to remove all selected values\n     * @default true\n     * @type {Boolean}\n     */\n    allowEmpty: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Reset this.internalValue, this.search after this.internalValue changes.\n     * Useful if want to create a stateless dropdown.\n     * @default false\n     * @type {Boolean}\n     */\n    resetAfter: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Enable/disable closing after selecting an option\n     * @default true\n     * @type {Boolean}\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Function to interpolate the custom label\n     * @default false\n     * @type {Function}\n     */\n    customLabel: {\n      type: Function,\n      default (option, label) {\n        if (isEmpty(option)) return ''\n        return label ? option[label] : option\n      }\n    },\n    /**\n     * Disable / Enable tagging\n     * @default false\n     * @type {Boolean}\n     */\n    taggable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * String to show when highlighting a potential tag\n     * @default 'Press enter to create a tag'\n     * @type {String}\n    */\n    tagPlaceholder: {\n      type: String,\n      default: 'Press enter to create a tag'\n    },\n    /**\n     * By default new tags will appear above the search results.\n     * Changing to 'bottom' will revert this behaviour\n     * and will proritize the search results\n     * @default 'top'\n     * @type {String}\n    */\n    tagPosition: {\n      type: String,\n      default: 'top'\n    },\n    /**\n     * Number of allowed selected options. No limit if 0.\n     * @default 0\n     * @type {Number}\n    */\n    max: {\n      type: [Number, Boolean],\n      default: false\n    },\n    /**\n     * Will be passed with all events as second param.\n     * Useful for identifying events origin.\n     * @default null\n     * @type {String|Integer}\n    */\n    id: {\n      default: null\n    },\n    /**\n     * Limits the options displayed in the dropdown\n     * to the first X options.\n     * @default 1000\n     * @type {Integer}\n    */\n    optionsLimit: {\n      type: Number,\n      default: 1000\n    },\n    /**\n     * Name of the property containing\n     * the group values\n     * @default 1000\n     * @type {String}\n    */\n    groupValues: {\n      type: String\n    },\n    /**\n     * Name of the property containing\n     * the group label\n     * @default 1000\n     * @type {String}\n    */\n    groupLabel: {\n      type: String\n    },\n    /**\n     * Allow to select all group values\n     * by selecting the group label\n     * @default false\n     * @type {Boolean}\n     */\n    groupSelect: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Array of keyboard keys to block\n     * when selecting\n     * @default 1000\n     * @type {String}\n    */\n    blockKeys: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    /**\n     * Prevent from wiping up the search value\n     * @default false\n     * @type {Boolean}\n    */\n    preserveSearch: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Select 1st options if value is empty\n     * @default false\n     * @type {Boolean}\n    */\n    preselectFirst: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted () {\n    /* istanbul ignore else */\n    if (!this.multiple && this.max) {\n      console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.');\n    }\n    if (\n      this.preselectFirst &&\n      !this.internalValue.length &&\n      this.options.length\n    ) {\n      this.select(this.filteredOptions[0]);\n    }\n  },\n  computed: {\n    internalValue () {\n      return this.modelValue || this.modelValue === 0\n        ? Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue]\n        : []\n    },\n    filteredOptions () {\n      const search = this.search || '';\n      const normalizedSearch = search.toLowerCase().trim();\n\n      let options = this.options.concat();\n\n      /* istanbul ignore else */\n      if (this.internalSearch) {\n        options = this.groupValues\n          ? this.filterAndFlat(options, normalizedSearch, this.label)\n          : filterOptions(options, normalizedSearch, this.label, this.customLabel);\n      } else {\n        options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options;\n      }\n\n      options = this.hideSelected\n        ? options.filter(not(this.isSelected))\n        : options;\n\n      /* istanbul ignore else */\n      if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\n        if (this.tagPosition === 'bottom') {\n          options.push({isTag: true, label: search});\n        } else {\n          options.unshift({isTag: true, label: search});\n        }\n      }\n\n      return options.slice(0, this.optionsLimit)\n    },\n    valueKeys () {\n      if (this.trackBy) {\n        return this.internalValue.map((element) => element[this.trackBy])\n      } else {\n        return this.internalValue\n      }\n    },\n    optionKeys () {\n      const options = this.groupValues ? this.flatAndStrip(this.options) : this.options;\n      return options.map((element) => this.customLabel(element, this.label).toString().toLowerCase())\n    },\n    currentOptionLabel () {\n      return this.multiple\n        ? this.searchable ? '' : this.placeholder\n        : this.internalValue.length\n          ? this.getOptionLabel(this.internalValue[0])\n          : this.searchable ? '' : this.placeholder\n    }\n  },\n  watch: {\n    internalValue () {\n      /* istanbul ignore else */\n      if (this.resetAfter && this.internalValue.length) {\n        this.search = '';\n        this.$emit('update:modelValue', this.multiple ? [] : null);\n      }\n    },\n    search () {\n      this.$emit('search-change', this.search);\n    }\n  },\n  emits: ['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'],\n  methods: {\n    /**\n     * Returns the internalValue in a way it can be emited to the parent\n     * @returns {Object||Array||String||Integer}\n     */\n    getValue () {\n      return this.multiple\n        ? this.internalValue\n        : this.internalValue.length === 0\n          ? null\n          : this.internalValue[0]\n    },\n    /**\n     * Filters and then flattens the options list\n     * @param  {Array}\n     * @return {Array} returns a filtered and flat options list\n     */\n    filterAndFlat (options, search, label) {\n      return flow(\n        filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel),\n        flattenOptions(this.groupValues, this.groupLabel)\n      )(options)\n    },\n    /**\n     * Flattens and then strips the group labels from the options list\n     * @param  {Array}\n     * @return {Array} returns a flat options list without group labels\n     */\n    flatAndStrip (options) {\n      return flow(\n        flattenOptions(this.groupValues, this.groupLabel),\n        stripGroups\n      )(options)\n    },\n    /**\n     * Updates the search value\n     * @param  {String}\n     */\n    updateSearch (query) {\n      this.search = query;\n    },\n    /**\n     * Finds out if the given query is already present\n     * in the available options\n     * @param  {String}\n     * @return {Boolean} returns true if element is available\n     */\n    isExistingOption (query) {\n      return !this.options\n        ? false\n        : this.optionKeys.indexOf(query) > -1\n    },\n    /**\n     * Finds out if the given element is already present\n     * in the result value\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is selected\n     */\n    isSelected (option) {\n      const opt = this.trackBy\n        ? option[this.trackBy]\n        : option;\n      return this.valueKeys.indexOf(opt) > -1\n    },\n    /**\n     * Finds out if the given option is disabled\n     * @param  {Object||String||Integer} option passed element to check\n     * @returns {Boolean} returns true if element is disabled\n     */\n    isOptionDisabled (option) {\n      return !!option.$isDisabled\n    },\n    /**\n     * Returns empty string when options is null/undefined\n     * Returns tag query if option is tag.\n     * Returns the customLabel() results and casts it to string.\n     *\n     * @param  {Object||String||Integer} Passed option\n     * @returns {Object||String}\n     */\n    getOptionLabel (option) {\n      if (isEmpty(option)) return ''\n      /* istanbul ignore else */\n      if (option.isTag) return option.label\n      /* istanbul ignore else */\n      if (option.$isLabel) return option.$groupLabel\n\n      const label = this.customLabel(option, this.label);\n      /* istanbul ignore else */\n      if (isEmpty(label)) return ''\n      return label\n    },\n    /**\n     * Add the given option to the list of selected options\n     * or sets the option as the selected option.\n     * If option is already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} option to select/deselect\n     * @param  {Boolean} block removing\n     */\n    select (option, key) {\n      /* istanbul ignore else */\n      if (option.$isLabel && this.groupSelect) {\n        this.selectGroup(option);\n        return\n      }\n      if (this.blockKeys.indexOf(key) !== -1 ||\n        this.disabled ||\n        option.$isDisabled ||\n        option.$isLabel\n      ) return\n      /* istanbul ignore else */\n      if (this.max && this.multiple && this.internalValue.length === this.max) return\n      /* istanbul ignore else */\n      if (key === 'Tab' && !this.pointerDirty) return\n      if (option.isTag) {\n        this.$emit('tag', option.label, this.id);\n        this.search = '';\n        if (this.closeOnSelect && !this.multiple) this.deactivate();\n      } else {\n        const isSelected = this.isSelected(option);\n\n        if (isSelected) {\n          if (key !== 'Tab') this.removeElement(option);\n          return\n        }\n\n        this.$emit('select', option, this.id);\n\n        if (this.multiple) {\n          this.$emit('update:modelValue', this.internalValue.concat([option]));\n        } else {\n          this.$emit('update:modelValue', option);\n        }\n\n        /* istanbul ignore else */\n        if (this.clearOnSelect) this.search = '';\n      }\n      /* istanbul ignore else */\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Add the given group options to the list of selected options\n     * If all group optiona are already selected -> remove it from the results.\n     *\n     * @param  {Object||String||Integer} group to select/deselect\n     */\n    selectGroup (selectedGroup) {\n      const group = this.options.find((option) => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      });\n\n      if (!group) return\n\n      if (this.wholeGroupSelected(group)) {\n        this.$emit('remove', group[this.groupValues], this.id);\n\n        const newValue = this.internalValue.filter(\n          (option) => group[this.groupValues].indexOf(option) === -1\n        );\n\n        this.$emit('update:modelValue', newValue);\n      } else {\n        const optionsToAdd = group[this.groupValues].filter(\n          (option) => !(this.isOptionDisabled(option) || this.isSelected(option))\n        );\n\n        this.$emit('select', optionsToAdd, this.id);\n        this.$emit(\n          'update:modelValue',\n          this.internalValue.concat(optionsToAdd)\n        );\n      }\n\n      if (this.closeOnSelect) this.deactivate();\n    },\n    /**\n     * Helper to identify if all values in a group are selected\n     *\n     * @param {Object} group to validated selected values against\n     */\n    wholeGroupSelected (group) {\n      return group[this.groupValues].every((option) => this.isSelected(option) || this.isOptionDisabled(option)\n      )\n    },\n    /**\n     * Helper to identify if all values in a group are disabled\n     *\n     * @param {Object} group to check for disabled values\n     */\n    wholeGroupDisabled (group) {\n      return group[this.groupValues].every(this.isOptionDisabled)\n    },\n    /**\n     * Removes the given option from the selected options.\n     * Additionally checks this.allowEmpty prop if option can be removed when\n     * it is the last selected option.\n     *\n     * @param  {type} option description\n     * @return {type}        description\n     */\n    removeElement (option, shouldClose = true) {\n      /* istanbul ignore else */\n      if (this.disabled) return\n      /* istanbul ignore else */\n      if (option.$isDisabled) return\n      /* istanbul ignore else */\n      if (!this.allowEmpty && this.internalValue.length <= 1) {\n        this.deactivate();\n        return\n      }\n\n      const index = typeof option === 'object'\n        ? this.valueKeys.indexOf(option[this.trackBy])\n        : this.valueKeys.indexOf(option);\n\n      this.$emit('remove', option, this.id);\n      if (this.multiple) {\n        const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1));\n        this.$emit('update:modelValue', newValue);\n      } else {\n        this.$emit('update:modelValue', null);\n      }\n\n      /* istanbul ignore else */\n      if (this.closeOnSelect && shouldClose) this.deactivate();\n    },\n    /**\n     * Calls this.removeElement() with the last element\n     * from this.internalValue (selected element Array)\n     *\n     * @fires this#removeElement\n     */\n    removeLastElement () {\n      /* istanbul ignore else */\n      if (this.blockKeys.indexOf('Delete') !== -1) return\n      /* istanbul ignore else */\n      if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\n        this.removeElement(this.internalValue[this.internalValue.length - 1], false);\n      }\n    },\n    /**\n     * Opens the multiselect’s dropdown.\n     * Sets this.isOpen to TRUE\n     */\n    activate () {\n      /* istanbul ignore else */\n      if (this.isOpen || this.disabled) return\n\n      this.adjustPosition();\n      /* istanbul ignore else  */\n      if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\n        this.pointer = 1;\n      }\n\n      this.isOpen = true;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        if (!this.preserveSearch) this.search = '';\n        this.$nextTick(() => this.$refs.search && this.$refs.search.focus());\n      } else {\n        this.$el.focus();\n      }\n      this.$emit('open', this.id);\n    },\n    /**\n     * Closes the multiselect’s dropdown.\n     * Sets this.isOpen to FALSE\n     */\n    deactivate () {\n      /* istanbul ignore else */\n      if (!this.isOpen) return\n\n      this.isOpen = false;\n      /* istanbul ignore else  */\n      if (this.searchable) {\n        this.$refs.search && this.$refs.search.blur();\n      } else {\n        this.$el.blur();\n      }\n      if (!this.preserveSearch) this.search = '';\n      this.$emit('close', this.getValue(), this.id);\n    },\n    /**\n     * Call this.activate() or this.deactivate()\n     * depending on this.isOpen value.\n     *\n     * @fires this#activate || this#deactivate\n     * @property {Boolean} isOpen indicates if dropdown is open\n     */\n    toggle () {\n      this.isOpen\n        ? this.deactivate()\n        : this.activate();\n    },\n    /**\n     * Updates the hasEnoughSpace variable used for\n     * detecting where to expand the dropdown\n     */\n    adjustPosition () {\n      if (typeof window === 'undefined') return\n\n      const spaceAbove = this.$el.getBoundingClientRect().top;\n      const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom;\n      const hasEnoughSpaceBelow = spaceBelow > this.maxHeight;\n\n      if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\n        this.preferredOpenDirection = 'below';\n        this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight);\n      } else {\n        this.preferredOpenDirection = 'above';\n        this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight);\n      }\n    }\n  }\n};\n\nvar pointerMixin = {\n  data () {\n    return {\n      pointer: 0,\n      pointerDirty: false\n    }\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true\n    },\n    optionHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  computed: {\n    pointerPosition () {\n      return this.pointer * this.optionHeight\n    },\n    visibleElements () {\n      return this.optimizedHeight / this.optionHeight\n    }\n  },\n  watch: {\n    filteredOptions () {\n      this.pointerAdjust();\n    },\n    isOpen () {\n      this.pointerDirty = false;\n    },\n    pointer () {\n      this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString());\n    }\n  },\n  methods: {\n    optionHighlight (index, option) {\n      return {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option)\n      }\n    },\n    groupHighlight (index, selectedGroup) {\n      if (!this.groupSelect) {\n        return [\n          'multiselect__option--disabled',\n          {'multiselect__option--group': selectedGroup.$isLabel}\n        ]\n      }\n\n      const group = this.options.find((option) => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      });\n\n      return group && !this.wholeGroupDisabled(group) ? [\n        'multiselect__option--group',\n        {'multiselect__option--highlight': index === this.pointer && this.showPointer},\n        {'multiselect__option--group-selected': this.wholeGroupSelected(group)}\n      ] : 'multiselect__option--disabled'\n    },\n    addPointerElement ({key} = 'Enter') {\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key);\n      }\n      this.pointerReset();\n    },\n    pointerForward () {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++;\n        /* istanbul ignore next */\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight;\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerBackward () {\n      if (this.pointer > 0) {\n        this.pointer--;\n        /* istanbul ignore else */\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition;\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerBackward();\n      } else {\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[0].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward();\n      }\n      this.pointerDirty = true;\n    },\n    pointerReset () {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return\n      this.pointer = 0;\n      /* istanbul ignore else */\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0;\n      }\n    },\n    pointerAdjust () {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length\n          ? this.filteredOptions.length - 1\n          : 0;\n      }\n\n      if (this.filteredOptions.length > 0 &&\n        this.filteredOptions[this.pointer].$isLabel &&\n        !this.groupSelect\n      ) {\n        this.pointerForward();\n      }\n    },\n    pointerSet (index) {\n      this.pointer = index;\n      this.pointerDirty = true;\n    }\n  }\n};\n\nvar script = {\n  name: 'vue-multiselect',\n  mixins: [multiselectMixin, pointerMixin],\n  props: {\n    /**\n       * name attribute to match optional label element\n       * @default ''\n       * @type {String}\n       */\n    name: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Presets the selected options value.\n       * @type {Object||Array||String||Integer}\n       */\n    modelValue: {\n      type: null,\n      default () {\n        return []\n      }\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectLabel: {\n      type: String,\n      default: 'Press enter to select'\n    },\n    /**\n       * String to show when pointing to an option\n       * @default 'Press enter to select'\n       * @type {String}\n       */\n    selectGroupLabel: {\n      type: String,\n      default: 'Press enter to select group'\n    },\n    /**\n       * String to show next to selected option\n       * @default 'Selected'\n       * @type {String}\n       */\n    selectedLabel: {\n      type: String,\n      default: 'Selected'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectLabel: {\n      type: String,\n      default: 'Press enter to remove'\n    },\n    /**\n       * String to show when pointing to an already selected option\n       * @default 'Press enter to remove'\n       * @type {String}\n       */\n    deselectGroupLabel: {\n      type: String,\n      default: 'Press enter to deselect group'\n    },\n    /**\n       * Decide whether to show pointer labels\n       * @default true\n       * @type {Boolean}\n       */\n    showLabels: {\n      type: Boolean,\n      default: true\n    },\n    /**\n       * Limit the display of selected options. The rest will be hidden within the limitText string.\n       * @default 99999\n       * @type {Integer}\n       */\n    limit: {\n      type: Number,\n      default: 99999\n    },\n    /**\n       * Sets maxHeight style value of the dropdown\n       * @default 300\n       * @type {Integer}\n       */\n    maxHeight: {\n      type: Number,\n      default: 300\n    },\n    /**\n       * Function that process the message shown when selected\n       * elements pass the defined limit.\n       * @default 'and * more'\n       * @param {Int} count Number of elements more than limit\n       * @type {Function}\n       */\n    limitText: {\n      type: Function,\n      default: (count) => `and ${count} more`\n    },\n    /**\n       * Set true to trigger the loading spinner.\n       * @default False\n       * @type {Boolean}\n       */\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Disables the multiselect if true.\n       * @default false\n       * @type {Boolean}\n       */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n       * Fixed opening direction\n       * @default ''\n       * @type {String}\n       */\n    openDirection: {\n      type: String,\n      default: ''\n    },\n    /**\n       * Shows slot with message about empty options\n       * @default true\n       * @type {Boolean}\n       */\n    showNoOptions: {\n      type: Boolean,\n      default: true\n    },\n    showNoResults: {\n      type: Boolean,\n      default: true\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    isSingleLabelVisible () {\n      return (\n        (this.singleValue || this.singleValue === 0) &&\n          (!this.isOpen || !this.searchable) &&\n          !this.visibleValues.length\n      )\n    },\n    isPlaceholderVisible () {\n      return !this.internalValue.length && (!this.searchable || !this.isOpen)\n    },\n    visibleValues () {\n      return this.multiple ? this.internalValue.slice(0, this.limit) : []\n    },\n    singleValue () {\n      return this.internalValue[0]\n    },\n    deselectLabelText () {\n      return this.showLabels ? this.deselectLabel : ''\n    },\n    deselectGroupLabelText () {\n      return this.showLabels ? this.deselectGroupLabel : ''\n    },\n    selectLabelText () {\n      return this.showLabels ? this.selectLabel : ''\n    },\n    selectGroupLabelText () {\n      return this.showLabels ? this.selectGroupLabel : ''\n    },\n    selectedLabelText () {\n      return this.showLabels ? this.selectedLabel : ''\n    },\n    inputStyle () {\n      if (\n        this.searchable ||\n          (this.multiple && this.modelValue && this.modelValue.length)\n      ) {\n        // Hide input by setting the width to 0 allowing it to receive focus\n        return this.isOpen\n          ? {width: '100%'}\n          : {width: '0', position: 'absolute', padding: '0'}\n      }\n      return ''\n    },\n    contentStyle () {\n      return this.options.length\n        ? {display: 'inline-block'}\n        : {display: 'block'}\n    },\n    isAbove () {\n      if (this.openDirection === 'above' || this.openDirection === 'top') {\n        return true\n      } else if (\n        this.openDirection === 'below' ||\n          this.openDirection === 'bottom'\n      ) {\n        return false\n      } else {\n        return this.preferredOpenDirection === 'above'\n      }\n    },\n    showSearchInput () {\n      return (\n        this.searchable &&\n          (this.hasSingleSelectedSlot &&\n            (this.visibleSingleValue || this.visibleSingleValue === 0)\n            ? this.isOpen\n            : true)\n      )\n    }\n  }\n};\n\nconst _hoisted_1 = {\n  ref: \"tags\",\n  class: \"multiselect__tags\"\n};\nconst _hoisted_2 = { class: \"multiselect__tags-wrap\" };\nconst _hoisted_3 = { class: \"multiselect__spinner\" };\nconst _hoisted_4 = { key: 0 };\nconst _hoisted_5 = { class: \"multiselect__option\" };\nconst _hoisted_6 = { class: \"multiselect__option\" };\nconst _hoisted_7 = /*#__PURE__*/createTextVNode(\"No elements found. Consider changing the search query.\");\nconst _hoisted_8 = { class: \"multiselect__option\" };\nconst _hoisted_9 = /*#__PURE__*/createTextVNode(\"List is empty.\");\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createBlock(\"div\", {\n    tabindex: _ctx.searchable ? -1 : $props.tabindex,\n    class: [{ 'multiselect--active': _ctx.isOpen, 'multiselect--disabled': $props.disabled, 'multiselect--above': $options.isAbove }, \"multiselect\"],\n    onFocus: _cache[14] || (_cache[14] = $event => (_ctx.activate())),\n    onBlur: _cache[15] || (_cache[15] = $event => (_ctx.searchable ? false : _ctx.deactivate())),\n    onKeydown: [\n      _cache[16] || (_cache[16] = withKeys(withModifiers($event => (_ctx.pointerForward()), [\"self\",\"prevent\"]), [\"down\"])),\n      _cache[17] || (_cache[17] = withKeys(withModifiers($event => (_ctx.pointerBackward()), [\"self\",\"prevent\"]), [\"up\"]))\n    ],\n    onKeypress: _cache[18] || (_cache[18] = withKeys(withModifiers($event => (_ctx.addPointerElement($event)), [\"stop\",\"self\"]), [\"enter\",\"tab\"])),\n    onKeyup: _cache[19] || (_cache[19] = withKeys($event => (_ctx.deactivate()), [\"esc\"])),\n    role: \"combobox\",\n    \"aria-owns\": 'listbox-'+_ctx.id\n  }, [\n    renderSlot(_ctx.$slots, \"caret\", { toggle: _ctx.toggle }, () => [\n      createVNode(\"div\", {\n        onMousedown: _cache[1] || (_cache[1] = withModifiers($event => (_ctx.toggle()), [\"prevent\",\"stop\"])),\n        class: \"multiselect__select\"\n      }, null, 32 /* HYDRATE_EVENTS */)\n    ]),\n    renderSlot(_ctx.$slots, \"clear\", { search: _ctx.search }),\n    createVNode(\"div\", _hoisted_1, [\n      renderSlot(_ctx.$slots, \"selection\", {\n        search: _ctx.search,\n        remove: _ctx.removeElement,\n        values: $options.visibleValues,\n        isOpen: _ctx.isOpen\n      }, () => [\n        withDirectives(createVNode(\"div\", _hoisted_2, [\n          (openBlock(true), createBlock(Fragment, null, renderList($options.visibleValues, (option, index) => {\n            return renderSlot(_ctx.$slots, \"tag\", {\n              option: option,\n              search: _ctx.search,\n              remove: _ctx.removeElement\n            }, () => [\n              (openBlock(), createBlock(\"span\", {\n                class: \"multiselect__tag\",\n                key: index\n              }, [\n                createVNode(\"span\", {\n                  textContent: toDisplayString(_ctx.getOptionLabel(option))\n                }, null, 8 /* PROPS */, [\"textContent\"]),\n                createVNode(\"i\", {\n                  tabindex: \"1\",\n                  onKeypress: withKeys(withModifiers($event => (_ctx.removeElement(option)), [\"prevent\"]), [\"enter\"]),\n                  onMousedown: withModifiers($event => (_ctx.removeElement(option)), [\"prevent\"]),\n                  class: \"multiselect__tag-icon\"\n                }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"onKeypress\", \"onMousedown\"])\n              ]))\n            ])\n          }), 256 /* UNKEYED_FRAGMENT */))\n        ], 512 /* NEED_PATCH */), [\n          [vShow, $options.visibleValues.length > 0]\n        ]),\n        (_ctx.internalValue && _ctx.internalValue.length > $props.limit)\n          ? renderSlot(_ctx.$slots, \"limit\", { key: 0 }, () => [\n              createVNode(\"strong\", {\n                class: \"multiselect__strong\",\n                textContent: toDisplayString($props.limitText(_ctx.internalValue.length - $props.limit))\n              }, null, 8 /* PROPS */, [\"textContent\"])\n            ])\n          : createCommentVNode(\"v-if\", true)\n      ]),\n      createVNode(Transition, { name: \"multiselect__loading\" }, {\n        default: withCtx(() => [\n          renderSlot(_ctx.$slots, \"loading\", {}, () => [\n            withDirectives(createVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), [\n              [vShow, $props.loading]\n            ])\n          ])\n        ]),\n        _: 3 /* FORWARDED */\n      }),\n      (_ctx.searchable)\n        ? (openBlock(), createBlock(\"input\", {\n            key: 0,\n            ref: \"search\",\n            name: $props.name,\n            id: _ctx.id,\n            type: \"text\",\n            autocomplete: \"off\",\n            spellcheck: \"false\",\n            placeholder: _ctx.placeholder,\n            style: $options.inputStyle,\n            value: _ctx.search,\n            disabled: $props.disabled,\n            tabindex: $props.tabindex,\n            onInput: _cache[2] || (_cache[2] = $event => (_ctx.updateSearch($event.target.value))),\n            onFocus: _cache[3] || (_cache[3] = withModifiers($event => (_ctx.activate()), [\"prevent\"])),\n            onBlur: _cache[4] || (_cache[4] = withModifiers($event => (_ctx.deactivate()), [\"prevent\"])),\n            onKeyup: _cache[5] || (_cache[5] = withKeys($event => (_ctx.deactivate()), [\"esc\"])),\n            onKeydown: [\n              _cache[6] || (_cache[6] = withKeys(withModifiers($event => (_ctx.pointerForward()), [\"prevent\"]), [\"down\"])),\n              _cache[7] || (_cache[7] = withKeys(withModifiers($event => (_ctx.pointerBackward()), [\"prevent\"]), [\"up\"])),\n              _cache[9] || (_cache[9] = withKeys(withModifiers($event => (_ctx.removeLastElement()), [\"stop\"]), [\"delete\"]))\n            ],\n            onKeypress: _cache[8] || (_cache[8] = withKeys(withModifiers($event => (_ctx.addPointerElement($event)), [\"prevent\",\"stop\",\"self\"]), [\"enter\"])),\n            class: \"multiselect__input\",\n            \"aria-controls\": 'listbox-'+_ctx.id\n          }, null, 44 /* STYLE, PROPS, HYDRATE_EVENTS */, [\"name\", \"id\", \"placeholder\", \"value\", \"disabled\", \"tabindex\", \"aria-controls\"]))\n        : createCommentVNode(\"v-if\", true),\n      ($options.isSingleLabelVisible)\n        ? (openBlock(), createBlock(\"span\", {\n            key: 1,\n            class: \"multiselect__single\",\n            onMousedown: _cache[10] || (_cache[10] = withModifiers((...args) => (_ctx.toggle && _ctx.toggle(...args)), [\"prevent\"]))\n          }, [\n            renderSlot(_ctx.$slots, \"singleLabel\", { option: $options.singleValue }, () => [\n              createTextVNode(toDisplayString(_ctx.currentOptionLabel), 1 /* TEXT */)\n            ])\n          ], 32 /* HYDRATE_EVENTS */))\n        : createCommentVNode(\"v-if\", true),\n      ($options.isPlaceholderVisible)\n        ? (openBlock(), createBlock(\"span\", {\n            key: 2,\n            class: \"multiselect__placeholder\",\n            onMousedown: _cache[11] || (_cache[11] = withModifiers((...args) => (_ctx.toggle && _ctx.toggle(...args)), [\"prevent\"]))\n          }, [\n            renderSlot(_ctx.$slots, \"placeholder\", {}, () => [\n              createTextVNode(toDisplayString(_ctx.placeholder), 1 /* TEXT */)\n            ])\n          ], 32 /* HYDRATE_EVENTS */))\n        : createCommentVNode(\"v-if\", true)\n    ], 512 /* NEED_PATCH */),\n    createVNode(Transition, { name: \"multiselect\" }, {\n      default: withCtx(() => [\n        withDirectives(createVNode(\"div\", {\n          class: \"multiselect__content-wrapper\",\n          onFocus: _cache[12] || (_cache[12] = (...args) => (_ctx.activate && _ctx.activate(...args))),\n          tabindex: \"-1\",\n          onMousedown: _cache[13] || (_cache[13] = withModifiers(() => {}, [\"prevent\"])),\n          style: { maxHeight: _ctx.optimizedHeight + 'px' },\n          ref: \"list\"\n        }, [\n          createVNode(\"ul\", {\n            class: \"multiselect__content\",\n            style: $options.contentStyle,\n            role: \"listbox\",\n            id: 'listbox-'+_ctx.id\n          }, [\n            renderSlot(_ctx.$slots, \"beforeList\"),\n            (_ctx.multiple && _ctx.max === _ctx.internalValue.length)\n              ? (openBlock(), createBlock(\"li\", _hoisted_4, [\n                  createVNode(\"span\", _hoisted_5, [\n                    renderSlot(_ctx.$slots, \"maxElements\", {}, () => [\n                      createTextVNode(\"Maximum of \" + toDisplayString(_ctx.max) + \" options selected. First remove a selected option to select another.\", 1 /* TEXT */)\n                    ])\n                  ])\n                ]))\n              : createCommentVNode(\"v-if\", true),\n            (!_ctx.max || _ctx.internalValue.length < _ctx.max)\n              ? (openBlock(true), createBlock(Fragment, { key: 1 }, renderList(_ctx.filteredOptions, (option, index) => {\n                  return (openBlock(), createBlock(\"li\", {\n                    class: \"multiselect__element\",\n                    key: index,\n                    id: _ctx.id + '-' + index,\n                    role: !(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\n                  }, [\n                    (!(option && (option.$isLabel || option.$isDisabled)))\n                      ? (openBlock(), createBlock(\"span\", {\n                          key: 0,\n                          class: [_ctx.optionHighlight(index, option), \"multiselect__option\"],\n                          onClick: withModifiers($event => (_ctx.select(option)), [\"stop\"]),\n                          onMouseenter: withModifiers($event => (_ctx.pointerSet(index)), [\"self\"]),\n                          \"data-select\": option && option.isTag ? _ctx.tagPlaceholder : $options.selectLabelText,\n                          \"data-selected\": $options.selectedLabelText,\n                          \"data-deselect\": $options.deselectLabelText\n                        }, [\n                          renderSlot(_ctx.$slots, \"option\", {\n                            option: option,\n                            search: _ctx.search,\n                            index: index\n                          }, () => [\n                            createVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)\n                          ])\n                        ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, [\"onClick\", \"onMouseenter\", \"data-select\", \"data-selected\", \"data-deselect\"]))\n                      : createCommentVNode(\"v-if\", true),\n                    (option && (option.$isLabel || option.$isDisabled))\n                      ? (openBlock(), createBlock(\"span\", {\n                          key: 1,\n                          \"data-select\": _ctx.groupSelect && $options.selectGroupLabelText,\n                          \"data-deselect\": _ctx.groupSelect && $options.deselectGroupLabelText,\n                          class: [_ctx.groupHighlight(index, option), \"multiselect__option\"],\n                          onMouseenter: withModifiers($event => (_ctx.groupSelect && _ctx.pointerSet(index)), [\"self\"]),\n                          onMousedown: withModifiers($event => (_ctx.selectGroup(option)), [\"prevent\"])\n                        }, [\n                          renderSlot(_ctx.$slots, \"option\", {\n                            option: option,\n                            search: _ctx.search,\n                            index: index\n                          }, () => [\n                            createVNode(\"span\", null, toDisplayString(_ctx.getOptionLabel(option)), 1 /* TEXT */)\n                          ])\n                        ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, [\"data-select\", \"data-deselect\", \"onMouseenter\", \"onMousedown\"]))\n                      : createCommentVNode(\"v-if\", true)\n                  ], 8 /* PROPS */, [\"id\", \"role\"]))\n                }), 128 /* KEYED_FRAGMENT */))\n              : createCommentVNode(\"v-if\", true),\n            withDirectives(createVNode(\"li\", null, [\n              createVNode(\"span\", _hoisted_6, [\n                renderSlot(_ctx.$slots, \"noResult\", { search: _ctx.search }, () => [\n                  _hoisted_7\n                ])\n              ])\n            ], 512 /* NEED_PATCH */), [\n              [vShow, $props.showNoResults && (_ctx.filteredOptions.length === 0 && _ctx.search && !$props.loading)]\n            ]),\n            withDirectives(createVNode(\"li\", null, [\n              createVNode(\"span\", _hoisted_8, [\n                renderSlot(_ctx.$slots, \"noOptions\", {}, () => [\n                  _hoisted_9\n                ])\n              ])\n            ], 512 /* NEED_PATCH */), [\n              [vShow, $props.showNoOptions && (_ctx.options.length === 0 && !_ctx.search && !$props.loading)]\n            ]),\n            renderSlot(_ctx.$slots, \"afterList\")\n          ], 12 /* STYLE, PROPS */, [\"id\"])\n        ], 36 /* STYLE, HYDRATE_EVENTS */), [\n          [vShow, _ctx.isOpen]\n        ])\n      ]),\n      _: 3 /* FORWARDED */\n    })\n  ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, [\"tabindex\", \"aria-owns\"]))\n}\n\nscript.render = render;\n\nexport default script;\nexport { script as Multiselect, multiselectMixin, pointerMixin };\n"],"sourceRoot":""}